開發環境: 
	OS: windows 10 home 
	語言: Java( JDK 11 )
	IDE: Intellij IDEA
未完成的部分: 無

Data Structure:
	class FileInf:  // 儲存input檔資訊
		String fileName: input檔名
		int numFrame: input中所寫的page frame數量
		String pageRef: input中的page reference string
		
	class TimestampFrame:  // 一個用於FIFO, LRU的frame
		char num: frame中page的數字
		long timestamp: page進入frame或被reference的時間
								      ，使用System.nanoTime()的值
		
	class CounterTimestampFrame:  // 一個用於MFU, LFU的frame
		char num: frame中的page的數字
		long timestamp: page進入frame或被reference的時間
									  ，使用System.nanoTime()的值
		int counter: page被reference的次數。

	class FrameRecord: // 紀錄一個時間單位內physical memory的資訊
		ArrayList<Character> frames: 
		boolean fault: 若發生page fault，值為true

	class OutputRecord:
		ArrayList<FrameRecord> frameRecords
		int numPageFault: 總共發生多少次page fault
		int numPageReplace: 總共發生多少次page replacement

	FIFO:
		PriorityQueue<TimestampFrame> frames = new PriorityQueue<>(3, new TimestampComparator())
			: 代表physical memory，容量最大為input中page frame數量，
			自訂的comparator能自動讓取出的物件順序符合想要的規範，像
			TimestampComparator會讓timestamp小的先出，LFUComparator會先取
			counter小的，如果一樣就取timestamp小的。
			initial capacity設為3是隨便設的。
		char curPage: 
			紀錄當前要reference哪個page
		ArrayList<TimestampFrame> tmpFrames: 
			用來暫存physical memory的資訊
		boolean frameExist: 紀錄當前時間要reference的page有無在physical memory
		